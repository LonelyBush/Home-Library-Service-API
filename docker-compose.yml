
services:
  postgres:
    image: postgres:17
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: home-library-postgres
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglogs:/var/log/postgresql
    networks:
      - app-net
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      target: run
    volumes:
      - .:/app
      - /app/node_modules
    container_name: home-library-api

    restart: unless-stopped
    depends_on:
        postgres:
          condition: service_healthy
    ports:
      - '${PORT}:${PORT}'
    networks:
      - app-net
    environment:
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}

    command: npm run start:dev

networks:
  app-net:
    driver: bridge

volumes:
  pgdata:
    driver: local
  pglogs:
    driver: local